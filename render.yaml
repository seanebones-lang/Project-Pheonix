# Render deployment configuration for ELCA Mothership AIs Enhanced Interactive Demo
services:
  # Backend API Service
  - type: web
    name: elca-mothership-api
    env: python
    plan: starter
    buildCommand: |
      pip install -r backend/requirements.txt
      pip install gunicorn
    startCommand: gunicorn enhanced_interactive_demo:app --bind 0.0.0.0:$PORT --workers 2 --worker-class uvicorn.workers.UvicornWorker
    envVars:
      - key: PORT
        value: 10000
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: ENVIRONMENT
        value: production
      - key: ELCA_COMPLIANCE_MODE
        value: true
      - key: ELCA_BIAS_AUDIT_ENABLED
        value: true
      - key: ELCA_TRANSPARENCY_MODE
        value: true
      - key: LOG_LEVEL
        value: INFO
      - key: DEMO_MODE
        value: true
    healthCheckPath: /api/health
    autoDeploy: true
    branch: main

  # Frontend Service
  - type: web
    name: elca-mothership-frontend
    env: static
    plan: starter
    buildCommand: |
      cd frontend
      npm install
      npm run build
    staticPublishPath: frontend/out
    envVars:
      - key: NEXT_PUBLIC_API_URL
        value: https://elca-mothership-api.onrender.com
      - key: NEXT_PUBLIC_WS_URL
        value: wss://elca-mothership-api.onrender.com
      - key: NEXT_PUBLIC_I18N_ENABLED
        value: true
      - key: NEXT_PUBLIC_ACCESSIBILITY_MODE
        value: true
      - key: NEXT_PUBLIC_DEMO_MODE
        value: true
    autoDeploy: true
    branch: main

  # Redis Service (for WebSocket and caching)
  - type: redis
    name: elca-mothership-redis
    plan: starter
    maxmemoryPolicy: allkeys-lru
    autoDeploy: true
    branch: main

databases:
  # PostgreSQL Database
  - name: elca-mothership-db
    plan: starter
    databaseName: elca_mothership
    user: elca_user
    autoDeploy: true
    branch: main
